{"version":3,"file":"js/893.800f729e.js","mappings":"oJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOL,EAAIM,QAAQC,KAAK,YAAcP,EAAIQ,MAAO,IAAG,CAACN,EAAG,WAAW,CAACO,YAAYT,EAAIU,GAAG,CAAC,CAACC,IAAI,QAAQC,GAAG,WAAW,MAAO,CAACV,EAAG,MAAM,CAACW,YAAY,aAAa,CAACX,EAAG,OAAO,CAACF,EAAIc,GAAGd,EAAIe,GAAGf,EAAIgB,QAAQC,UAAsC,IAA3BjB,EAAIgB,QAAQE,MAAMC,KAAYjB,EAAG,MAAM,CAACkB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOvB,EAAIgB,QAAQE,MAAMM,OAAO,GAAIC,WAAW,4BAA4BZ,YAAY,QAAQa,MAAM,CAAC,IAAM,MAAM1B,EAAI2B,OAAmC,IAA3B3B,EAAIgB,QAAQE,MAAMC,KAAYjB,EAAG,MAAM,CAACW,YAAY,aAAab,EAAI4B,GAAI5B,EAAIgB,QAAQE,MAAMM,QAAQ,SAASK,EAAKC,GAAO,OAAO5B,EAAG,MAAM,CAACkB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOM,EAAMJ,WAAW,SAASd,IAAImB,EAAMjB,YAAY,QAAQa,MAAM,CAAC,IAAM,KAAM,IAAE,GAAG1B,EAAI2B,KAAM,EAACI,OAAM,GAAM,CAACpB,IAAI,QAAQC,GAAG,WAAW,MAAO,CAACV,EAAG,MAAM,CAACW,YAAY,aAAa,CAACX,EAAG,OAAO,CAACF,EAAIc,GAAGd,EAAIe,GAAGf,EAAIgB,QAAQgB,UAAU,OAAOhC,EAAIe,GAAGf,EAAIgB,QAAQiB,YAAY,SAASjC,EAAIe,GAAGf,EAAIkC,GAAG,aAAPlC,CAAqBA,EAAIgB,QAAQmB,aAAcnC,EAAIoC,SAAUlC,EAAG,WAAW,CAACwB,MAAM,CAAC,KAAO,SAAStB,GAAG,CAAC,MAAQ,SAASC,GAAQA,EAAOgC,kBAAkBrC,EAAIsC,MAAO,CAAK,KAAItC,EAAI2B,MAAM,GAAI,EAACI,OAAM,OAAU7B,EAAG,mBAAmB,CAACwB,MAAM,CAAC,cAAc,KAAK,WAAY,EAAM,gBAAgB,QAAQtB,GAAG,CAAC,OAAS,SAASC,GAAQL,EAAIuC,SAAU,CAAK,GAAEC,MAAM,CAACjB,MAAOvB,EAAIsC,KAAMG,SAAS,SAAUC,GAAM1C,EAAIsC,KAAKI,CAAI,EAACjB,WAAW,SAAS,CAAEzB,EAAIuC,QAASrC,EAAG,MAAMF,EAAI4B,GAAI5B,EAAI2C,SAAS,SAASd,GAAM,OAAO3B,EAAG,WAAW,CAACS,IAAIkB,EAAKR,KAAKR,YAAY,eAAea,MAAM,CAAC,MAAQG,EAAKR,KAAK,UAAY,IAAIjB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOL,EAAI4C,YAAYf,EAAKR,KAAM,IAAI,IAAE,GAAGnB,EAAG,MAAM,CAACA,EAAG,WAAW,CAACwB,MAAM,CAAC,MAAQ,KAAK,UAAY,GAAG,cAAc,gBAAgBtB,GAAG,CAAC,MAAQ,SAASC,GAAQL,EAAIuC,SAAU,CAAK,KAAIvC,EAAI4B,GAAI5B,EAAI6C,SAAS,SAAShB,GAAM,OAAO3B,EAAG,WAAW,CAACS,IAAIkB,EAAKV,KAAKO,MAAM,CAAC,MAAQG,EAAKiB,MAAM,UAAY,GAAG,cAAc,gBAAgB1C,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOL,EAAI+C,cAAclB,EAAKV,KAAM,IAAI,KAAG,MAAM,EACz9D,EACG6B,EAAkB,GCDtB,MAAMH,EAAU,CACd,CACE1B,KAAM,EACN2B,MAAO,QAET,CACE3B,KAAM,EACN2B,MAAO,QAET,CACE3B,KAAM,EACN2B,MAAO,QAET,CACE3B,KAAM,EACN2B,MAAO,QAET,CACE3B,KAAM,EACN2B,MAAO,QAET,CACE3B,KAAM,EACN2B,MAAO,QAET,CACE3B,KAAM,EACN2B,MAAO,MAET,CACE3B,KAAM,EACN2B,MAAO,QAET,CACE3B,KAAM,EACN2B,MAAO,WAGX,Q,SCWA,GACAzB,KAAAA,UACA4B,MAAAA,CAEAjC,QAAAA,CACAG,KAAAA,OACA+B,UAAAA,GAGAd,SAAAA,CACAjB,KAAAA,QAEAgC,SAAAA,IAGAC,OACA,OAEAd,MAAAA,EAEAK,QAAAA,CACA,CAAAtB,KAAAA,QACA,CAAAA,KAAAA,UACA,CAAAA,KAAAA,SAGAkB,SAAAA,EAEAM,QAAAA,EAEA,EACAQ,QAAAA,CAEA,qBACA,eAEA,MAAAD,KAAAA,SAAA,oBACA,kBAEA,wCAEA,YAEA,iBACAE,QAAAA,IAAAA,QACA,cAEA,eAEA,gBAEA,EAEA,uBAEA,MAAAF,KAAAA,SAAA,sBACA,kBAEA,wCAGA,YACA,GAEAG,SAAAA,CAEA/C,QAEA,qCACA,ICvHgQ,I,OCQ5PgD,GAAY,OACd,EACAzD,EACAiD,GACA,EACA,KACA,WACA,MAIF,EAAeQ,EAAiB,O,mECnBhC,IAAIzD,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACW,YAAY,kBAAkB,CAACX,EAAG,cAAc,CAACwB,MAAM,CAAC,MAAQ,IAAIjB,YAAYT,EAAIU,GAAG,CAAC,CAACC,IAAI,OAAOC,GAAG,WAAW,MAAO,CAACV,EAAG,MAAM,CAACW,YAAY,OAAOa,MAAM,CAAC,IAAM+B,EAAQ,KAAyB,IAAM,UAAW,EAAC1B,OAAM,GAAM,CAACpB,IAAI,QAAQC,GAAG,WAAW,MAAO,CAACV,EAAG,WAAW,CAACwB,MAAM,CAAC,KAAO,SAAS,MAAQ,QAAQ,KAAO,MAAMtB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOL,EAAIM,QAAQC,KAAK,UAAW,KAAK,EAACwB,OAAM,OAAU7B,EAAG,WAAW,CAACwB,MAAM,CAAC,OAAS,GAAG,aAAa,iBAAiBc,MAAM,CAACjB,MAAOvB,EAAI0D,OAAQjB,SAAS,SAAUC,GAAM1C,EAAI0D,OAAOhB,CAAI,EAACjB,WAAW,WAAWzB,EAAI4B,GAAI5B,EAAI2D,aAAa,SAAS9B,GAAM,OAAO3B,EAAG,UAAU,CAACS,IAAIkB,EAAK+B,GAAGlC,MAAM,CAAC,MAAQG,EAAKR,OAAO,CAACnB,EAAG,WAAW,CAACwB,MAAM,CAAC,aAAaG,EAAK+B,OAAO,EAAG,IAAE,GAAG1D,EAAG,WAAW,CAACW,YAAY,OAAOa,MAAM,CAAC,KAAO,OAAO,KAAO,MAAMtB,GAAG,CAAC,MAAQ,SAASC,GAAQL,EAAIsC,MAAO,CAAK,KAAIpC,EAAG,YAAY,CAACwB,MAAM,CAAC,0BAAyB,GAAOtB,GAAG,CAAC,OAAS,SAASC,GAAQL,EAAI6D,OAAQ,CAAM,GAAErB,MAAM,CAACjB,MAAOvB,EAAIsC,KAAMG,SAAS,SAAUC,GAAM1C,EAAIsC,KAAKI,CAAI,EAACjB,WAAW,SAAS,CAACvB,EAAG,MAAM,CAACW,YAAY,mBAAmB,CAACX,EAAG,cAAc,CAACwB,MAAM,CAAC,MAAQ,QAAQjB,YAAYT,EAAIU,GAAG,CAAC,CAACC,IAAI,QAAQC,GAAG,WAAW,MAAO,CAACV,EAAG,WAAW,CAACwB,MAAM,CAAC,KAAO,QAAQ,KAAO,KAAK,MAAQ,SAAStB,GAAG,CAAC,MAAQ,SAASC,GAAQL,EAAIsC,MAAO,CAAM,KAAK,EAACP,OAAM,OAAU7B,EAAG,MAAM,CAACW,YAAY,YAAY,CAACX,EAAG,MAAM,CAACW,YAAY,kBAAkB,CAACX,EAAG,MAAM,CAACW,YAAY,iBAAiB,CAACX,EAAG,MAAM,CAACA,EAAG,OAAO,CAACW,YAAY,cAAc,CAACb,EAAIc,GAAG,YAAYZ,EAAG,OAAO,CAACW,YAAY,cAAc,CAACb,EAAIc,GAAGd,EAAIe,GAAGf,EAAI6D,MAAQ,SAAW,eAAe3D,EAAG,OAAO,CAACW,YAAY,WAAWT,GAAG,CAAC,MAAQ,SAASC,GAAQL,EAAI6D,OAAS7D,EAAI6D,KAAM,IAAG,CAAC7D,EAAIc,GAAGd,EAAIe,GAAGf,EAAI6D,MAAQ,KAAO,WAAW3D,EAAG,UAAU,CAACwB,MAAM,CAAC,KAAO,SAAS1B,EAAI4B,GAAI5B,EAAI2D,aAAa,SAAS9B,EAAKC,GAAO,OAAO5B,EAAG,UAAU,CAACS,IAAIkB,EAAK+B,GAAGlC,MAAM,CAAC,KAAO,MAAM,CAACxB,EAAG,MAAM,CAACW,YAAY,sCAAsCT,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOL,EAAI8D,mBAAmBjC,EAAMC,EAAO,IAAG,CAAC9B,EAAIc,GAAG,IAAId,EAAIe,GAAGc,EAAKR,MAAM,KAAMrB,EAAI6D,OAAuB,OAAdhC,EAAKR,MAAiBrB,EAAI2D,YAAYI,OAAS,EAAG7D,EAAG,YAAY,CAACW,YAAY,cAAca,MAAM,CAAC,MAAQ,eAAejB,YAAYT,EAAIU,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,WAAW,MAAO,CAACV,EAAG,WAAW,CAACW,YAAY,aAAaa,MAAM,CAAC,KAAO,QAAQ,MAAQ,UAAU,KAAO,QAAS,EAACK,OAAM,IAAO,MAAK,KAAQ/B,EAAI2B,MAAM,IAAK,IAAE,IAAI,GAAGzB,EAAG,MAAM,CAACW,YAAY,8BAA8BX,EAAG,MAAM,CAACW,YAAY,oBAAoB,CAACX,EAAG,MAAM,CAACW,YAAY,iBAAiB,CAACX,EAAG,MAAM,CAACA,EAAG,OAAO,CAACW,YAAY,cAAc,CAACb,EAAIc,GAAG,YAAYZ,EAAG,OAAO,CAACW,YAAY,cAAc,CAACb,EAAIc,GAAG,gBAAgBZ,EAAG,UAAU,CAACwB,MAAM,CAAC,KAAO,SAAS1B,EAAI4B,GAAI5B,EAAIgE,cAAc,SAASnC,GAAM,OAAO3B,EAAG,UAAU,CAACS,IAAIkB,EAAK+B,GAAGlC,MAAM,CAAC,KAAO,MAAM,CAACxB,EAAG,MAAM,CAACW,YAAY,sCAAsCT,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOL,EAAIiE,WAAWpC,EAAM,IAAG,CAAC7B,EAAIc,GAAGd,EAAIe,GAAGc,EAAKR,UAAW,IAAE,IAAI,MAAM,MAAM,EACp7F,EACG2B,EAAkB,G,SCFlBjD,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,mBAAmB,CAACwB,MAAM,CAAC,SAAW1B,EAAIkE,UAAU9D,GAAG,CAAC,QAAUJ,EAAImE,WAAW3B,MAAM,CAACjB,MAAOvB,EAAIoE,UAAW3B,SAAS,SAAUC,GAAM1C,EAAIoE,UAAU1B,CAAI,EAACjB,WAAW,cAAc,CAACvB,EAAG,WAAW,CAACwB,MAAM,CAAC,SAAW1B,EAAIkE,SAAS,gBAAgB,QAAQ,mBAAkB,GAAO9D,GAAG,CAAC,KAAOJ,EAAIqE,QAAQ7B,MAAM,CAACjB,MAAOvB,EAAIsE,QAAS7B,SAAS,SAAUC,GAAM1C,EAAIsE,QAAQ5B,CAAI,EAACjB,WAAW,YAAYzB,EAAI4B,GAAI5B,EAAIuE,SAAS,SAAS1C,GAAM,OAAO3B,EAAG,WAAW,CAACS,IAAIkB,EAAK2C,OAAOC,WAAW/C,MAAM,CAAC,QAAUG,GAAMzB,GAAG,CAAC,iBAAiBJ,EAAI0E,gBAAiB,IAAE,IAAI,IAAI,EACrnB,EACG1B,EAAkB,G,SCctB,GACA3B,KAAAA,UACA4B,MAAAA,CACA0B,UAAAA,CACAxD,KAAAA,OACA+B,UAAAA,IAGAE,OACA,OAEAmB,QAAAA,GAEAK,UAAAA,KAAAA,MAKAN,SAAAA,EAIAJ,UAAAA,EACAE,WAAAA,EAEA,EACAS,UAEA,kBACA,EACAxB,QAAAA,CAEA,qBAEA,MAAAD,KAAAA,SAAA,uCACA,mBAEA,oCAEA,GAGA,iDAEA,oBAIA,iDAEA,iBAGA,8BACA,kBAGA,EAEAiB,SACAf,QAAAA,IAAAA,aACA,kBACA,EAEAa,YACAb,QAAAA,IAAAA,WACA,oBACA,EAEAoB,cAAAA,GAEA,+DAGA,wBAEA,kBAEA,GAEAI,WAAAA,CACAC,QAAAA,EAAAA,ICjGgQ,I,OCO5PvB,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIF,EAAeA,EAAiB,QC8EhC,GACAnC,KAAAA,OACA+B,OACA,OAEAM,OAAAA,EAEAC,YAAAA,GAEArB,MAAAA,EAEA0C,WAAAA,GAEAnB,OAAAA,EAEA,EACAgB,UACA,uBAEA,qBACA,EAGAI,iBAAAA,EAAAA,EAAAA,GACAC,EAAAA,KAAAA,IAAAA,OAAAA,QACAC,GACA,EACA9B,QAAAA,CACA,wBAEA,MAAAD,KAAAA,SAAA,UAEA,mBAEA,iCAEA,EAEA,uBACA,MAAAA,KAAAA,SAAA,UACA,mBAEA,gCAEA,EAGAa,WAAAA,GAEA,yBAGA,oBACA,EAEA,uBAEA,yBACAmB,QAAAvD,GAAAA,OAAAA,EAAAA,OACAwD,KAAA,QACA,CACAzB,GAAAA,EAAAA,GACA0B,IAAAA,EAAAA,OAKAlC,KAAAA,SAAA,WACA,kBAEA,cAAAjC,KAAAA,UAAAoE,QAAAA,OAAAC,SAAAA,KAEA,EAEA1B,mBAAAA,EAAAA,GACA,eAGA,qDAEA,2DAEA,oBACA,MAGA,cAEA,YAEA,GAEAP,SAAAA,CAEAS,eAEA,mCAEA,qDAEA,qBAEA,GAEAc,WAAAA,CACAW,QAAAA,ICzM6P,ICQzP,GAAY,OACd,EACA1F,EACAiD,GACA,EACA,KACA,WACA,MAIF,EAAe,EAAiB,O,4LCfzB,MAAM0C,EAAoB,IACxBC,EAAAA,EAAAA,IAAY,uBAIRC,EAAgB,CAAChC,EAAIiC,IACzBF,EAAAA,EAAAA,IAAY,iBAAkB,CACnCG,OAAQ,CACNC,WAAYnC,EACZgB,UAAWiB,KAMJG,EAAoBpC,GACxB+B,EAAAA,EAAAA,KAAa,yBAA0B,CAC5CM,OAAQrC,IAKCsC,EAAmB,CAACD,EAAQ9E,IAChCwE,EAAAA,EAAAA,KAAa,wBAAyB,CAC3CM,SACA9E,SAKSgF,EAAmB,IACvBR,EAAAA,EAAAA,IAAY,kBAKRS,EAAuBC,GAC3BV,EAAAA,EAAAA,IAAY,sBAAuB,CACxCU,Y","sources":["webpack://vue_toutiao/./src/components/ArtItem/ArtItem.vue","webpack://vue_toutiao/./src/api/reports.js","webpack://vue_toutiao/src/components/ArtItem/ArtItem.vue","webpack://vue_toutiao/./src/components/ArtItem/ArtItem.vue?9171","webpack://vue_toutiao/./src/components/ArtItem/ArtItem.vue?c60b","webpack://vue_toutiao/./src/views/Home/Home.vue","webpack://vue_toutiao/./src/components/ArtList/ArtList.vue","webpack://vue_toutiao/src/components/ArtList/ArtList.vue","webpack://vue_toutiao/./src/components/ArtList/ArtList.vue?97da","webpack://vue_toutiao/./src/components/ArtList/ArtList.vue?9a61","webpack://vue_toutiao/src/views/Home/Home.vue","webpack://vue_toutiao/./src/views/Home/Home.vue?895f","webpack://vue_toutiao/./src/views/Home/Home.vue?5a52","webpack://vue_toutiao/./src/api/homeAPI.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{on:{\"click\":function($event){return _vm.$router.push('/article/' + _vm.artId)}}},[_c('van-cell',{scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('div',{staticClass:\"title-box\"},[_c('span',[_vm._v(_vm._s(_vm.article.title))]),(_vm.article.cover.type === 1)?_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(_vm.article.cover.images[0]),expression:\"article.cover.images[0]\"}],staticClass:\"thumb\",attrs:{\"alt\":\"\"}}):_vm._e()]),(_vm.article.cover.type === 3)?_c('div',{staticClass:\"thumb-box\"},_vm._l((_vm.article.cover.images),function(item,index){return _c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(item),expression:\"item\"}],key:index,staticClass:\"thumb\",attrs:{\"alt\":\"\"}})}),0):_vm._e()]},proxy:true},{key:\"label\",fn:function(){return [_c('div',{staticClass:\"label-box\"},[_c('span',[_vm._v(_vm._s(_vm.article.aut_name)+\"    \"+_vm._s(_vm.article.comm_count)+\"评论    \"+_vm._s(_vm._f(\"dateFormat\")(_vm.article.pubdate)))]),(_vm.closable)?_c('van-icon',{attrs:{\"name\":\"cross\"},on:{\"click\":function($event){$event.stopPropagation();_vm.show = true}}}):_vm._e()],1)]},proxy:true}])}),_c('van-action-sheet',{attrs:{\"cancel-text\":\"取消\",\"closeable\":false,\"get-container\":\"body\"},on:{\"closed\":function($event){_vm.isFirst = true}},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[(_vm.isFirst)?_c('div',_vm._l((_vm.actions),function(item){return _c('van-cell',{key:item.name,staticClass:\"center-title\",attrs:{\"title\":item.name,\"clickable\":\"\"},on:{\"click\":function($event){return _vm.onCellClick(item.name)}}})}),1):_c('div',[_c('van-cell',{attrs:{\"title\":\"返回\",\"clickable\":\"\",\"title-class\":\"center-title\"},on:{\"click\":function($event){_vm.isFirst = true}}}),_vm._l((_vm.reports),function(item){return _c('van-cell',{key:item.type,attrs:{\"title\":item.label,\"clickable\":\"\",\"title-class\":\"center-title\"},on:{\"click\":function($event){return _vm.reportArticle(item.type)}}})})],2)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// 以模块的方式导出\"举报文章\"时，后端接口约定的举报类型\r\nconst reports = [\r\n  {\r\n    type: 0,\r\n    label: '其它问题'\r\n  },\r\n  {\r\n    type: 1,\r\n    label: '标题夸张'\r\n  },\r\n  {\r\n    type: 2,\r\n    label: '低俗色情'\r\n  },\r\n  {\r\n    type: 3,\r\n    label: '错别字多'\r\n  },\r\n  {\r\n    type: 4,\r\n    label: '旧闻重复'\r\n  },\r\n  {\r\n    type: 6,\r\n    label: '内容不实'\r\n  },\r\n  {\r\n    type: 8,\r\n    label: '侵权'\r\n  },\r\n  {\r\n    type: 5,\r\n    label: '广告软文'\r\n  },\r\n  {\r\n    type: 7,\r\n    label: '涉嫌违法犯罪'\r\n  }\r\n]\r\nexport default reports","<template>\r\n  <div @click=\"$router.push('/article/' + artId)\">\r\n    <van-cell>\r\n      <!-- 标题区域的插槽 -->\r\n      <template #title>\r\n        <div class=\"title-box\">\r\n          <!-- 标题 -->\r\n          <span>{{ article.title }}</span>\r\n          <!-- 单张图片 -->\r\n          <img alt=\"\" class=\"thumb\" v-if=\"article.cover.type === 1\" v-lazy=\"article.cover.images[0]\">\r\n        </div>\r\n        <!-- 三张图片 -->\r\n        <div class=\"thumb-box\" v-if=\"article.cover.type === 3\">\r\n          <img alt=\"\" class=\"thumb\" v-for=\"(item, index) in article.cover.images\" :key=\"index\" v-lazy=\"item\">\r\n        </div>\r\n      </template>\r\n      <!-- label 区域的插槽 -->\r\n      <template #label>\r\n        <div class=\"label-box\">\r\n          <span>{{ article.aut_name }} &nbsp;&nbsp; {{ article.comm_count }}评论 &nbsp;&nbsp; {{ article.pubdate |\r\n              dateFormat\r\n          }}</span>\r\n          <!-- 关闭按钮 -->\r\n          <van-icon name=\"cross\" @click.stop=\"show = true\" v-if=\"closable\" />\r\n        </div>\r\n      </template>\r\n    </van-cell>\r\n\r\n    <!-- 反馈的动作面板 -->\r\n    <van-action-sheet v-model=\"show\" cancel-text=\"取消\" :closeable=\"false\" @closed=\"isFirst = true\" get-container=\"body\">\r\n      <!-- 第一级反馈面板 -->\r\n      <div v-if=\"isFirst\">\r\n        <!-- 循环渲染可选项 -->\r\n        <van-cell :title=\"item.name\" clickable class=\"center-title\" v-for=\"item in actions\" :key=\"item.name\"\r\n          @click=\"onCellClick(item.name)\" />\r\n      </div>\r\n      <!-- 第二级反馈面板 -->\r\n      <div v-else>\r\n        <van-cell title=\"返回\" clickable title-class=\"center-title\" @click=\"isFirst = true\" />\r\n        <van-cell :title=\"item.label\" clickable title-class=\"center-title\" v-for=\"item in reports\" :key=\"item.type\"\r\n          @click=\"reportArticle(item.type)\" />\r\n      </div>\r\n    </van-action-sheet>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport reports from '@/api/reports'\r\nimport { dislikeArticleAPI, reportArticleAPI } from '@/api/homeAPI.js'\r\nexport default {\r\n  name: 'ArtItem',\r\n  props: {\r\n    // 文章的信息对象\r\n    article: {\r\n      type: Object, // 数据类型\r\n      required: true // 必填项\r\n    },\r\n    // 是否展示关闭按钮\r\n    closable: {\r\n      type: Boolean,\r\n      // 默认值为 true，表示展示关闭按钮\r\n      default: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      // 是否展示反馈面板\r\n      show: false,\r\n      // 第一个面板的可选项列表\r\n      actions: [\r\n        { name: '不感兴趣' },\r\n        { name: '反馈垃圾内容' },\r\n        { name: '拉黑作者' }\r\n      ],\r\n      // 是否展示第一个反馈面板\r\n      isFirst: true,\r\n      // 第二个面板的可选项列表，数组中每一项的格式 { type, label }\r\n      reports\r\n    }\r\n  },\r\n  methods: {\r\n    // 一级选项的点击事件处理函数\r\n    async onCellClick (name) {\r\n      if (name === '不感兴趣') {\r\n        // 调用 API 接口，将文章设置为不感兴趣\r\n        const { data: res } = await dislikeArticleAPI(this.artId)\r\n        if (res.message === 'OK') {\r\n          // TODO：炸楼的操作\r\n          this.$emit('remove-article', this.artId)\r\n        }\r\n        this.show = false\r\n\r\n      } else if (name === '拉黑作者') {\r\n        console.log('拉黑作者')\r\n        this.show = false\r\n\r\n      } else if (name === '反馈垃圾内容') {\r\n        // TODO：展示二级反馈面板\r\n        this.isFirst = false\r\n      }\r\n    },\r\n    // 举报文章（形参 type 是举报的类型值）\r\n    async reportArticle (type) {\r\n      // 1. 发起举报文章的请求\r\n      const { data: res } = await reportArticleAPI(this.artId, type)\r\n      if (res.message === 'OK') {\r\n        // 2. 炸楼操作，触发自定义事件，把文章 Id 发送给父组件\r\n        this.$emit('remove-article', this.artId)\r\n      }\r\n      // 3. 关闭动作面板\r\n      this.show = false\r\n    }\r\n  },\r\n  computed: {\r\n    // 文章 Id 的计算属性\r\n    artId () {\r\n      // 注意：文章对象的 art_id 是大数对象，需要调用 .toString() 方法转换为字符串形式\r\n      return this.article.art_id.toString()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.label-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.thumb {\r\n  // 矩形黄金比例：0.618\r\n  width: 113px;\r\n  height: 70px;\r\n  background-color: #f8f8f8;\r\n  object-fit: cover;\r\n}\r\n\r\n.title-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n}\r\n\r\n.thumb-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.center-title {\r\n  text-align: center;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ArtItem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ArtItem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ArtItem.vue?vue&type=template&id=326e8220&scoped=true&\"\nimport script from \"./ArtItem.vue?vue&type=script&lang=js&\"\nexport * from \"./ArtItem.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ArtItem.vue?vue&type=style&index=0&id=326e8220&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"326e8220\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home-container\"},[_c('van-nav-bar',{attrs:{\"fixed\":\"\"},scopedSlots:_vm._u([{key:\"left\",fn:function(){return [_c('img',{staticClass:\"logo\",attrs:{\"src\":require(\"../../assets/logo.png\"),\"alt\":\"logo\"}})]},proxy:true},{key:\"right\",fn:function(){return [_c('van-icon',{attrs:{\"name\":\"search\",\"color\":\"white\",\"size\":\"18\"},on:{\"click\":function($event){return _vm.$router.push('/search')}}})]},proxy:true}])}),_c('van-tabs',{attrs:{\"sticky\":\"\",\"offset-top\":\"1.22666667rem\"},model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},_vm._l((_vm.userChannel),function(item){return _c('van-tab',{key:item.id,attrs:{\"title\":item.name}},[_c('art-list',{attrs:{\"channel-id\":item.id}})],1)}),1),_c('van-icon',{staticClass:\"plus\",attrs:{\"name\":\"plus\",\"size\":\"16\"},on:{\"click\":function($event){_vm.show = true}}}),_c('van-popup',{attrs:{\"close-on-click-overlay\":false},on:{\"closed\":function($event){_vm.isDel = false}},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[_c('div',{staticClass:\"popup-container\"},[_c('van-nav-bar',{attrs:{\"title\":\"频道管理\"},scopedSlots:_vm._u([{key:\"right\",fn:function(){return [_c('van-icon',{attrs:{\"name\":\"cross\",\"size\":\"14\",\"color\":\"white\"},on:{\"click\":function($event){_vm.show = false}}})]},proxy:true}])}),_c('div',{staticClass:\"pop-body\"},[_c('div',{staticClass:\"my-channel-box\"},[_c('div',{staticClass:\"channel-title\"},[_c('div',[_c('span',{staticClass:\"title-bold\"},[_vm._v(\"已添加频道：\")]),_c('span',{staticClass:\"title-gray\"},[_vm._v(_vm._s(_vm.isDel ? '点击移除频道' : '点击进入频道'))])]),_c('span',{staticClass:\"btn-edit\",on:{\"click\":function($event){_vm.isDel = !_vm.isDel}}},[_vm._v(_vm._s(_vm.isDel ? '完成' : '编辑'))])]),_c('van-row',{attrs:{\"type\":\"flex\"}},_vm._l((_vm.userChannel),function(item,index){return _c('van-col',{key:item.id,attrs:{\"span\":\"6\"}},[_c('div',{staticClass:\"channel-item van-hairline--surround\",on:{\"click\":function($event){return _vm.onUserChannelClick(item, index)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \"),(_vm.isDel && item.name !== '推荐' && _vm.userChannel.length > 2)?_c('van-badge',{staticClass:\"cross-badge\",attrs:{\"color\":\"transparent\"},scopedSlots:_vm._u([{key:\"content\",fn:function(){return [_c('van-icon',{staticClass:\"badge-icon\",attrs:{\"name\":\"cross\",\"color\":\"#cfcfcf\",\"size\":\"12\"}})]},proxy:true}],null,true)}):_vm._e()],1)])}),1)],1),_c('div',{staticClass:\"van-hairline--top sp-line\"}),_c('div',{staticClass:\"more-channel-box\"},[_c('div',{staticClass:\"channel-title\"},[_c('div',[_c('span',{staticClass:\"title-bold\"},[_vm._v(\"可添加频道：\")]),_c('span',{staticClass:\"title-gray\"},[_vm._v(\"点击添加频道\")])])]),_c('van-row',{attrs:{\"type\":\"flex\"}},_vm._l((_vm.moreChannels),function(item){return _c('van-col',{key:item.id,attrs:{\"span\":\"6\"}},[_c('div',{staticClass:\"channel-item van-hairline--surround\",on:{\"click\":function($event){return _vm.addChannel(item)}}},[_vm._v(_vm._s(item.name))])])}),1)],1)])],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('van-pull-refresh',{attrs:{\"disabled\":_vm.finished},on:{\"refresh\":_vm.onRefresh},model:{value:(_vm.isLoading),callback:function ($$v) {_vm.isLoading=$$v},expression:\"isLoading\"}},[_c('van-list',{attrs:{\"finished\":_vm.finished,\"finished-text\":\"没有更多了\",\"immediate-check\":false},on:{\"load\":_vm.onLoad},model:{value:(_vm.loading),callback:function ($$v) {_vm.loading=$$v},expression:\"loading\"}},_vm._l((_vm.artlist),function(item){return _c('art-item',{key:item.art_id.toString(),attrs:{\"article\":item},on:{\"remove-article\":_vm.removeArticle}})}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 下拉刷新 -->\r\n    <van-pull-refresh v-model=\"isLoading\" @refresh=\"onRefresh\" :disabled=\"finished\">\r\n      <!-- 上拉加载更多 -->\r\n      <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"没有更多了\" @load=\"onLoad\" :immediate-check=\"false\">\r\n        <!-- 循环渲染文章的列表 -->\r\n        <art-item v-for=\"item in artlist\" :key=\"item.art_id.toString()\" :article=\"item\" @remove-article=\"removeArticle\">\r\n        </art-item>\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { getArtListAPI } from '@/api/homeAPI'\r\nimport ArtItem from '@/components/ArtItem/ArtItem.vue'\r\nexport default {\r\n  name: 'ArtList',\r\n  props: {\r\n    channelId: {\r\n      type: Number, // 数值类型\r\n      required: true // 必填项\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      // 文章列表的数组\r\n      artlist: [],\r\n      // 时间戳。初始的默认值为当前的时间戳\r\n      timestamp: Date.now(),\r\n      // loading 表示是否正在进行上拉加载的请求\r\n      //   每当触发 List 组件的上拉加载更多时，List 组件会自动把 loading 设为 true\r\n      //   每当下一页的数据请求回来以后，需要程序员手动的把 loading 设为 false，\r\n      //   否则：再次触发上拉加载更多时，不会发起请求！！\r\n      loading: false,\r\n      // finished 表示所有数据是否加载完毕\r\n      //    false 表示还有下一页的数据\r\n      //    true  表示所有数据都已加载完毕\r\n      finished: false,\r\n      isLoading: false\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建的时候，请求文章的列表数据\r\n    this.initArtList()\r\n  },\r\n  methods: {\r\n    // 初始化文章的列表数据\r\n    async initArtList (isRefresh) {\r\n      // 请求 API 接口\r\n      const { data: res } = await getArtListAPI(this.channelId, this.timestamp)\r\n      if (res.message === 'OK') {\r\n        // 为时间戳重新赋值\r\n        this.timestamp = res.data.pre_timestamp\r\n        // 判断是否为下拉刷新\r\n        if (isRefresh) {\r\n          // 下拉刷新\r\n          // 1. “新数据”在前，“旧数据”在后\r\n          this.artlist = [...res.data.results, ...this.artlist]\r\n          // 2. 重置 isLoading 为 false\r\n          this.isLoading = false\r\n        } else {\r\n          // 上拉加载\r\n          // 1. “旧数据”在前，“新数据”在后\r\n          this.artlist = [...this.artlist, ...res.data.results]\r\n          // 2. 重置 loading 为 false\r\n          this.loading = false\r\n        }\r\n        // 3. 判断所有的数据是否已加载完毕\r\n        if (res.data.pre_timestamp === null) {\r\n          this.finished = true\r\n        }\r\n      }\r\n    },\r\n    // 加载更多的数据\r\n    onLoad () {\r\n      console.log('触发了上拉加载更多')\r\n      this.initArtList()\r\n    },\r\n    // 下拉刷新\r\n    onRefresh () {\r\n      console.log('触发了下拉刷新')\r\n      this.initArtList(true)\r\n    },\r\n    // 从文章列表中移除指定 id 的文章\r\n    removeArticle (id) {\r\n      // 1. 炸楼操作\r\n      this.artlist = this.artlist.filter(item => item.art_id.toString() !== id)\r\n\r\n      // 2. 判断剩余数据的文章数量是否小于 10\r\n      if (this.artlist.length < 10) {\r\n        // 主动请求下一页的数据\r\n        this.initArtList()\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    ArtItem\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ArtList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ArtList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ArtList.vue?vue&type=template&id=91decb7e&scoped=true&\"\nimport script from \"./ArtList.vue?vue&type=script&lang=js&\"\nexport * from \"./ArtList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"91decb7e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"home-container\">\r\n    <!-- 头部区域 -->\r\n    <van-nav-bar fixed>\r\n      <!-- 左侧的插槽 -->\r\n      <template #left>\r\n        <img src=\"../../assets/logo.png\" alt=\"logo\" class=\"logo\" />\r\n      </template>\r\n      <!-- 右侧的插槽 -->\r\n      <template #right>\r\n        <van-icon name=\"search\" color=\"white\" size=\"18\" @click=\"$router.push('/search')\" />\r\n      </template>\r\n    </van-nav-bar>\r\n\r\n    <!-- 频道列表的标签页 -->\r\n    <van-tabs v-model=\"active\" sticky offset-top=\"1.22666667rem\">\r\n      <!-- 循环渲染用户的频道 -->\r\n      <van-tab v-for=\"item in userChannel\" :key=\"item.id\" :title=\"item.name\">\r\n        <!-- 在每一个用户频道下，渲染出对应的“文章列表组件” -->\r\n        <art-list :channel-id=\"item.id\"></art-list>\r\n      </van-tab>\r\n    </van-tabs>\r\n\r\n    <!-- 频道管理的小图标 -->\r\n    <van-icon name=\"plus\" size=\"16\" class=\"plus\" @click=\"show = true\" />\r\n\r\n    <!-- 频道管理的弹出层 -->\r\n    <van-popup v-model=\"show\" :close-on-click-overlay=\"false\" @closed=\"isDel = false\">\r\n      <div class=\" popup-container\">\r\n\r\n        <!-- 弹出层的头部区域 -->\r\n        <van-nav-bar title=\"频道管理\">\r\n          <template #right>\r\n            <van-icon name=\"cross\" size=\"14\" color=\"white\" @click=\"show = false\" />\r\n          </template>\r\n        </van-nav-bar>\r\n\r\n        <!-- 弹出层的主体区域 -->\r\n        <div class=\"pop-body\">\r\n          <!-- 我的频道 -->\r\n          <div class=\"my-channel-box\">\r\n            <div class=\"channel-title\">\r\n              <div>\r\n                <span class=\"title-bold\">已添加频道：</span>\r\n                <!-- 提示的文本 -->\r\n                <span class=\"title-gray\">{{ isDel ? '点击移除频道' : '点击进入频道' }}</span>\r\n              </div>\r\n              <!-- 按钮的文本 -->\r\n              <span class=\"btn-edit\" @click=\"isDel = !isDel\">{{ isDel ? '完成' : '编辑' }}</span>\r\n            </div>\r\n            <!-- 我的频道列表 -->\r\n            <van-row type=\"flex\">\r\n              <!-- 1. 在进行 v-for 循环时，接收索引 index -->\r\n              <van-col span=\"6\" v-for=\"(item, index) in userChannel\" :key=\"item.id\">\r\n                <!-- 2. 点击用户频道的 Item 项时，将索引 index 作为参数，传递给 onUserChannelClick 方法 -->\r\n                <div class=\"channel-item van-hairline--surround\" @click=\"onUserChannelClick(item, index)\">\r\n                  {{ item.name }}\r\n                  <!-- 删除的图标 -->\r\n                  <van-badge color=\"transparent\" class=\"cross-badge\"\r\n                    v-if=\"isDel && item.name !== '推荐' && userChannel.length > 2\">\r\n                    <template #content>\r\n                      <van-icon name=\"cross\" class=\"badge-icon\" color=\"#cfcfcf\" size=\"12\" />\r\n                    </template>\r\n                  </van-badge>\r\n                </div>\r\n              </van-col>\r\n            </van-row>\r\n          </div>\r\n\r\n          <!-- 分隔线 -->\r\n          <div class=\"van-hairline--top sp-line\"></div>\r\n\r\n          <!-- 更多频道 -->\r\n          <div class=\"more-channel-box\">\r\n            <div class=\"channel-title\">\r\n              <div>\r\n                <span class=\"title-bold\">可添加频道：</span>\r\n                <span class=\"title-gray\">点击添加频道</span>\r\n              </div>\r\n            </div>\r\n            <!-- 更多频道列表 -->\r\n            <van-row type=\"flex\">\r\n              <van-col span=\"6\" v-for=\"item in moreChannels\" :key=\"item.id\">\r\n                <div class=\"channel-item van-hairline--surround\" @click=\"addChannel(item)\">{{ item.name }}</div>\r\n              </van-col>\r\n            </van-row>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUserChannelAPI, getAllChannelAPI, updateUserChannelAPI } from '@/api/homeAPI'\r\nimport ArtList from '@/components/ArtList/ArtList.vue'\r\nexport default {\r\n  name: 'Home',\r\n  data () {\r\n    return {\r\n      // 标签页激活项的索引\r\n      active: 0,\r\n      // 用户的频道列表数组\r\n      userChannel: [],\r\n      // 控制频道管理弹出层的展示与隐藏\r\n      show: false,\r\n      // 所有的频道列表数据\r\n      allChannel: [],\r\n      // 频道数据是否处于删除的状态\r\n      isDel: false\r\n    }\r\n  },\r\n  created () {\r\n    this.initUserChannel()\r\n    // 请求所有的频道列表数据\r\n    this.initAllChannel()\r\n  },\r\n  // 导航离开该组件的对应路由时调用\r\n  // 可以访问组件实例 `this`\r\n  beforeRouteLeave (to, from, next) {\r\n    from.meta.top = window.scrollY\r\n    next()\r\n  },\r\n  methods: {\r\n    async initUserChannel () {\r\n      // 1. 调用 API 接口\r\n      const { data: res } = await getUserChannelAPI()\r\n      // 2. 判断请求是否成功\r\n      if (res.message === 'OK') {\r\n        // 3. 为用户的频道列表赋值\r\n        this.userChannel = res.data.channels\r\n      }\r\n    },\r\n    // 获取所有频道的列表数据\r\n    async initAllChannel () {\r\n      const { data: res } = await getAllChannelAPI()\r\n      if (res.message === 'OK') {\r\n        // 将请求到的数据，转存到 allChannel 中\r\n        this.allChannel = res.data.channels\r\n      }\r\n    },\r\n    // 新增频道（形参 item 就是当前用户点击的频道信息对象）\r\n    // 格式：{ id, name }\r\n    addChannel (item) {\r\n      // 将用户点击的频道，添加到“用户频道”列表中\r\n      this.userChannel.push(item)\r\n\r\n      // TODO：调用 API 接口，将最新的用户频道，存储到后台数据库中\r\n      this.updateChannel()\r\n    },\r\n    // 把用户的频道列表数据提交到后端保存\r\n    async updateChannel (item) {\r\n      // 1. 准备要提交到服务器的数据\r\n      const channels = this.userChannel\r\n        .filter(item => item.name !== '推荐') // 将“推荐”从频道列表中过滤出去\r\n        .map((item, index) => {               // 调用数组的 map 循环，最终返回一个处理好的新数组\r\n          return {\r\n            id: item.id,\r\n            seq: index + 1\r\n          }\r\n        })\r\n\r\n      // 2. 调用 API 接口\r\n      const { data: res } = await updateUserChannelAPI(channels)\r\n      if (res.message === 'OK') {\r\n        // 3. 通过 notify 弹框提示用户更新成功\r\n        this.$notify({ type: 'success', message: '更新成功', duration: 1000 })\r\n      }\r\n    },\r\n    // 从用户频道列表中，移除指定 id 的频道\r\n    onUserChannelClick (channel, index) {\r\n      if (this.isDel) {\r\n        // 处于删除状态\r\n        // 判断用户点击的是否为“推荐”\r\n        if (channel.name === '推荐' || this.userChannel.length === 2) return\r\n        // TODO1：从 userChannel 中移除指定的频道\r\n        this.userChannel = this.userChannel.filter(item => item.id !== channel.id)\r\n        // TODO2：将更改过后的用户频道数据，提交到服务器保存\r\n        this.updateChannel()\r\n      } else {\r\n        // 不处于删除状态\r\n        // 1. 修改 Tabs 的激活项的索引值\r\n        this.active = index\r\n        // 2. 关闭 popup 弹出层\r\n        this.show = false\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    // 更多频道的数据\r\n    moreChannels () {\r\n      // 1. 对数组进行 filter 过滤，返回的是符合条件的新数组\r\n      return this.allChannel.filter(item => {\r\n        // 判断当前循环项，是否在 “我的频道” 列表之中\r\n        const index = this.userChannel.findIndex(x => x.id === item.id)\r\n        // 如果不在，则 return true，表示需要把这一项存储到返回的新数组之中\r\n        if (index === -1) return true\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    ArtList\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// 组件外层容器的样式\r\n.home-container {\r\n  padding-top: 46px;\r\n  padding-bottom: 50px;\r\n}\r\n\r\n// logo 样式\r\n.logo {\r\n  height: 80%;\r\n}\r\n\r\n// 为 tabs 容器设置右 padding\r\n/deep/ .van-tabs__wrap {\r\n  padding-right: 36px;\r\n  background-color: white;\r\n}\r\n\r\n// 频道管理小图标的定位\r\n.plus {\r\n  position: fixed;\r\n  top: 58px;\r\n  right: 10px;\r\n  z-index: 999;\r\n}\r\n\r\n.van-popup,\r\n.popup-container {\r\n  background-color: transparent;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.popup-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.pop-body {\r\n  flex: 1;\r\n  overflow: scroll;\r\n  padding: 8px;\r\n  background-color: white;\r\n}\r\n\r\n.my-channel-box,\r\n.more-channel-box {\r\n  .channel-title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 14px;\r\n    line-height: 28px;\r\n    padding: 0 6px;\r\n\r\n    .title-bold {\r\n      font-weight: bold;\r\n    }\r\n\r\n    .title-gray {\r\n      color: gray;\r\n      font-size: 12px;\r\n    }\r\n  }\r\n}\r\n\r\n.btn-edit {\r\n  border: 1px solid #a3a2a2;\r\n  padding: 0 10px;\r\n  line-height: 20px;\r\n  height: 20px;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n}\r\n\r\n.channel-item {\r\n  font-size: 12px;\r\n  text-align: center;\r\n  line-height: 36px;\r\n  background-color: #fafafa;\r\n  margin: 6px;\r\n}\r\n\r\n.cross-badge {\r\n  position: absolute;\r\n  right: -3px;\r\n  top: 0;\r\n  border: none;\r\n}\r\n\r\n.sp-line {\r\n  margin: 10px 0 20px 0;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=430d85cb&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=430d85cb&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"430d85cb\",\n  null\n  \n)\n\nexport default component.exports","// 导入请求数据的 request 模块\r\nimport request from '@/utils/request'\r\n\r\n// 请求用户频道列表数据的 API\r\nexport const getUserChannelAPI = () => {\r\n  return request.get('/v1_0/user/channels')\r\n}\r\n\r\n// 根据频道 Id 请求频道下的文章列表数据\r\nexport const getArtListAPI = (id, time) => {\r\n  return request.get('/v1_0/articles', {\r\n    params: {\r\n      channel_id: id, // 频道的 Id\r\n      timestamp: time, // 时间戳\r\n    }\r\n  })\r\n}\r\n\r\n// 将文章设置为不感兴趣（形参 id 是文章的 id）\r\nexport const dislikeArticleAPI = id => {\r\n  return request.post('/v1_0/article/dislikes', {\r\n    target: id\r\n  })\r\n}\r\n\r\n// 举报文章的 API\r\nexport const reportArticleAPI = (target, type) => {\r\n  return request.post('/v1_0/article/reports', {\r\n    target, // 文章的 Id\r\n    type // 举报的类型\r\n  })\r\n}\r\n\r\n// 获取所有频道数据的 API\r\nexport const getAllChannelAPI = () => {\r\n  return request.get('/v1_0/channels')\r\n}\r\n\r\n// 更新用户频道列表数据的 API\r\n// 注意：形参 channels 是一个数组，格式： [ {id, seq} ]\r\nexport const updateUserChannelAPI = channels => {\r\n  return request.put('/v1_0/user/channels', {\r\n    channels\r\n  })\r\n}"],"names":["render","_vm","this","_c","_self","on","$event","$router","push","artId","scopedSlots","_u","key","fn","staticClass","_v","_s","article","title","cover","type","directives","name","rawName","value","images","expression","attrs","_e","_l","item","index","proxy","aut_name","comm_count","_f","pubdate","closable","stopPropagation","show","isFirst","model","callback","$$v","actions","onCellClick","reports","label","reportArticle","staticRenderFns","props","required","default","data","methods","console","computed","component","require","active","userChannel","id","isDel","onUserChannelClick","length","moreChannels","addChannel","finished","onRefresh","isLoading","onLoad","loading","artlist","art_id","toString","removeArticle","channelId","timestamp","created","components","ArtItem","allChannel","beforeRouteLeave","from","next","filter","map","seq","message","duration","ArtList","getUserChannelAPI","request","getArtListAPI","time","params","channel_id","dislikeArticleAPI","target","reportArticleAPI","getAllChannelAPI","updateUserChannelAPI","channels"],"sourceRoot":""}