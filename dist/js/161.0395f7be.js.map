{"version":3,"file":"js/161.0395f7be.js","mappings":"iKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,cAAc,CAACG,MAAM,CAAC,MAAQ,YAAY,MAAQ,MAAMH,EAAG,WAAW,CAACI,GAAG,CAAC,OAASN,EAAIO,QAAQ,CAACL,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,MAAM,MAAQ,OAAO,YAAc,UAAU,SAAW,GAAG,MAAQL,EAAIQ,MAAMC,QAAQC,MAAM,CAACC,MAAOX,EAAIY,KAAKH,OAAQI,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIY,KAAM,SAAUE,EAAK,EAACE,WAAW,iBAAiBd,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,WAAW,MAAQ,OAAO,YAAc,UAAU,SAAW,GAAG,MAAQL,EAAIQ,MAAMS,MAAMP,MAAM,CAACC,MAAOX,EAAIY,KAAKK,KAAMJ,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIY,KAAM,OAAQE,EAAK,EAACE,WAAW,eAAed,EAAG,MAAM,CAACgB,YAAY,CAAC,OAAS,SAAS,CAAChB,EAAG,aAAa,CAACG,MAAM,CAAC,MAAQ,GAAG,MAAQ,GAAG,KAAO,OAAO,cAAc,WAAW,CAACL,EAAImB,GAAG,SAAS,IAAI,IAAI,EACzzB,EACGC,EAAkB,G,kBCmBtB,GACAC,KAAAA,QACAC,OACA,OAEAV,KAAAA,CAEAH,OAAAA,GAEAQ,KAAAA,UAGAT,MAAAA,CAGAC,OAAAA,CAEA,CAAAc,UAAAA,EAAAC,QAAAA,WAAAC,QAAAA,UAEA,CAAAC,QAAAA,YAAAF,QAAAA,YAAAC,QAAAA,WAGAR,KAAAA,CAAAA,CAAAM,UAAAA,EAAAC,QAAAA,UAAAC,QAAAA,YAGA,EACAE,QAAAA,KAEA,uCAEA,cAEA,MAAAL,KAAAA,SAAA,mBAIA,GAHAM,QAAAA,IAAAA,GAGA,kBAEA,6BAEA,mCACA,uBACA,CACA,IChE8P,I,OCQ1PC,GAAY,OACd,EACA9B,EACAqB,GACA,EACA,KACA,WACA,MAIF,EAAeS,EAAiB,O","sources":["webpack://vue_toutiao/./src/views/Login/Login.vue","webpack://vue_toutiao/src/views/Login/Login.vue","webpack://vue_toutiao/./src/views/Login/Login.vue?866a","webpack://vue_toutiao/./src/views/Login/Login.vue?5822"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"login-container\"},[_c('van-nav-bar',{attrs:{\"title\":\"黑马头条 - 登录\",\"fixed\":\"\"}}),_c('van-form',{on:{\"submit\":_vm.login}},[_c('van-field',{attrs:{\"type\":\"tel\",\"label\":\"手机号码\",\"placeholder\":\"请输入手机号码\",\"required\":\"\",\"rules\":_vm.rules.mobile},model:{value:(_vm.form.mobile),callback:function ($$v) {_vm.$set(_vm.form, \"mobile\", $$v)},expression:\"form.mobile\"}}),_c('van-field',{attrs:{\"type\":\"password\",\"label\":\"登录密码\",\"placeholder\":\"请输入登录密码\",\"required\":\"\",\"rules\":_vm.rules.code},model:{value:(_vm.form.code),callback:function ($$v) {_vm.$set(_vm.form, \"code\", $$v)},expression:\"form.code\"}}),_c('div',{staticStyle:{\"margin\":\"16px\"}},[_c('van-button',{attrs:{\"round\":\"\",\"block\":\"\",\"type\":\"info\",\"native-type\":\"submit\"}},[_vm._v(\"提交\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"login-container\">\r\n    <van-nav-bar title=\"黑马头条 - 登录\" fixed />\r\n\r\n    <!-- 登录的表单 -->\r\n    <van-form @submit=\"login\">\r\n      <van-field v-model=\"form.mobile\" type=\"tel\" label=\"手机号码\" placeholder=\"请输入手机号码\" required :rules=\"rules.mobile\">\r\n      </van-field>\r\n      <van-field v-model=\"form.code\" type=\"password\" label=\"登录密码\" placeholder=\"请输入登录密码\" required :rules=\"rules.code\">\r\n      </van-field>\r\n      <div style=\"margin: 16px;\">\r\n        <van-button round block type=\"info\" native-type=\"submit\">提交</van-button>\r\n      </div>\r\n    </van-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { loginAPI } from '@/api/userAPI'\r\n// 1. 按需导入辅助方法\r\nimport { mapMutations } from 'vuex'\r\nexport default {\r\n  name: 'Login',\r\n  data () {\r\n    return {\r\n      // 登录表单的数据，最终要双向绑定到 form 这个数据对象上\r\n      form: {\r\n        // 用户的手机号\r\n        mobile: '',\r\n        // 登录的密码\r\n        code: '246810'\r\n      },\r\n      // 表单的校验规则对象\r\n      rules: {\r\n        // 手机号的校验规则\r\n        // 只有同时满足以下两个验证规则，才能验证通过\r\n        mobile: [\r\n          // 必填项的校验规则\r\n          { required: true, message: '请填写您的手机号', trigger: 'onBlur' },\r\n          // 11 位手机号的校验规则\r\n          { pattern: /^1\\d{10}$/, message: '请填写正确的手机号', trigger: 'onBlur' }\r\n        ],\r\n        // 密码的校验规则\r\n        code: [{ required: true, message: '请填写您的密码', trigger: 'onBlur' }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 2. 映射 mutations 中的方法\r\n    ...mapMutations(['updateTokenInfo']),\r\n\r\n    async login () {\r\n      // 只有当表单数据校验通过之后，才会调用此 login 函数\r\n      const { data: res } = await loginAPI(this.form)\r\n      console.log(res)\r\n\r\n      // 判断是否登录成功了\r\n      if (res.message === 'OK') {\r\n        // 1. 把登录成功的结果，存储到 vuex 中\r\n        this.updateTokenInfo(res.data)\r\n        // 2. 要跳转到首页\r\n        const navPath = this.$route.query.pre || '/'\r\n        this.$router.replace(navPath)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login-container {\r\n  padding-top: 46px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=6412e67a&scoped=true&\"\nimport script from \"./Login.vue?vue&type=script&lang=js&\"\nexport * from \"./Login.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=6412e67a&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6412e67a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","login","rules","mobile","model","value","form","callback","$$v","$set","expression","code","staticStyle","_v","staticRenderFns","name","data","required","message","trigger","pattern","methods","console","component"],"sourceRoot":""}